{
  "name": "grunt-touch",
  "description": "Touch files",
  "version": "0.1.0",
  "homepage": "https://github.com/mapsherpa/grunt-touch",
  "author": {
    "name": "Paul Spencer",
    "email": "paul@pagameba.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/mapsherpa/grunt-touch.git"
  },
  "bugs": {
    "url": "https://github.com/mapsherpa/grunt-touch/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/mapsherpa/grunt-touch/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "devDependencies": {
    "grunt-contrib-jshint": "~0.6.0",
    "grunt-contrib-clean": "~0.4.0",
    "grunt-contrib-nodeunit": "~0.2.0",
    "grunt": "~0.4.1"
  },
  "peerDependencies": {
    "grunt": "~0.4.1"
  },
  "keywords": [
    "gruntplugin"
  ],
  "dependencies": {
    "touch": "0.0.2"
  },
  "readme": "# grunt-touch\n\n> Touch files\n\nwraps [node-touch](https://github.com/isaacs/node-touch) as a grunt multi-task.\n\n## Getting Started\nThis plugin requires Grunt `~0.4.1`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-touch --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-touch');\n```\n\n## The \"touch\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `touch` to the data object passed into `grunt.initConfig()`.\n\n```js\ngrunt.initConfig({\n  touch: {\n    options: {\n      // Task-specific options go here.\n    },\n    your_target: {\n      // Target-specific file lists and/or options go here.\n    },\n  },\n})\n```\n\n### Options\n\nOptions align with https://github.com/isaacs/node-touch#options\n\n#### options.force\nType: `Boolean`\nDefault value: `false`\n\nlike `touch -f`\n\n#### options.time\nType: `Date`\nDefault value: `new Date()`\n\nlike `touch -t <date>` where `<date>` is a Date, parsable Date string or epoch ms numbder\n\n#### options.atime\nType: `Date`\nDefault value: `null`\n\nlike `touch -a`, value may be a Boolean or a Date\n\n#### options.mtime\nType: `Date`\nDefault value: `null`\n\nlike `touch -m`, value may be a Boolean or a Date\n\n#### options.ref\nType: `String`\nDefault value: `null`\n\nlike `touch -r <file>`, where `<file>` is a path to a file\n\n#### options.nocreate\nType: `Boolean`\nDefault value: `false`\n\nlike `touch -c`\n\n### Usage Examples\n\n```js\ngrunt.initConfig({\n  touch: {\n    options: {\n      force: true,\n      mtime: true\n    },\n    src: ['test'],\n  }\n});\n```\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\n\n## Release History\n0.1.0 - initial release\n",
  "readmeFilename": "README.md",
  "_id": "grunt-touch@0.1.0",
  "dist": {
    "shasum": "3e5d8d4dfa8f4f2320dab07ee456d30f8dc356dc",
    "tarball": "http://registry.npmjs.org/grunt-touch/-/grunt-touch-0.1.0.tgz"
  },
  "_from": "grunt-touch@>=0.1.0 <0.2.0",
  "_npmVersion": "1.2.25",
  "_npmUser": {
    "name": "pagameba",
    "email": "paul@pagameba.com"
  },
  "maintainers": [
    {
      "name": "pagameba",
      "email": "paul@pagameba.com"
    }
  ],
  "directories": {},
  "_shasum": "3e5d8d4dfa8f4f2320dab07ee456d30f8dc356dc",
  "_resolved": "https://registry.npmjs.org/grunt-touch/-/grunt-touch-0.1.0.tgz"
}
